<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>OpenResty(二)-Nginx和Lua基础</title>
      <link href="/2020/07/09/OpenResty(%E4%BA%8C)-Nginx%E5%92%8CLua%E5%9F%BA%E7%A1%80/"/>
      <url>/2020/07/09/OpenResty(%E4%BA%8C)-Nginx%E5%92%8CLua%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h2 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h2><blockquote><p><a href="http://nginx.org/en/docs/" target="_blank" rel="noopener">Nginx模块配置文档</a></p></blockquote><ul><li>能通过Lua代码解决的，<strong>不用</strong>Nginx的配置、变量和模块解决</li><li>Nginx支持的功能，OpenResty不一定支持，需要看版本号，它们的版本号保持一致的</li></ul><h3 id="工作模式"><a href="#工作模式" class="headerlink" title="工作模式"></a>工作模式</h3><pre class="mermaid">graph LR    Master进程 --> Worker进程1     subgraph 客户端连接        客户端1 --> Worker进程1        客户端2 --> Worker进程1    end    Master进程 --> Worker进程2    Master进程 --> Worker进程...    Master进程 --> Worker进程n</pre><p>Master进程不负责处理终端的请求，它只管理Worker进程，主要是接受管理员发送的信号量、监控Worker的运行状态。<br>Worker进程从Master进程<strong>fork</strong>出来的，彼此之间相互独立，互不影响。有多个worker进程时，其中一个Worker进程奔溃退出了，并不会影响其他Worker进程。</p><p>Nginx和OpenResty的<a href="https://github.com/openresty/lua-nginx-module#readme" target="_blank" rel="noopener">生命周期关系</a>：<br><img src="https://gitee.com/linjk/linjkImgs/raw/master/imgs/20200710002937.png" alt=""></p><h2 id="Lua"><a href="#Lua" class="headerlink" title="Lua"></a>Lua</h2>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> OpenResty </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OpenResty </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker安装MariaDB</title>
      <link href="/2020/07/08/Docker%E5%AE%89%E8%A3%85MariaDB/"/>
      <url>/2020/07/08/Docker%E5%AE%89%E8%A3%85MariaDB/</url>
      
        <content type="html"><![CDATA[<p>MariaDb在官网的Mac系统的pkg包居然是10.2版本的，最新都10.5.4了，只能在docker仓库里查找一下是否有官方包了:<code>docker search mariadb</code>，有，很好，下载最新版本: <code>docker pull mariadb:10.5.4</code></p><p>查看本地已有的所有镜像确认一下：<code>docker images</code>:<br><img src="https://gitee.com/linjk/linjkImgs/raw/master/imgs/20200709003233.png" alt=""></p><p>运行数据库前，首先创建数据目录:<br><code>mkdir -p /Users/linjk/Documents/docker/mariadb/data</code> </p><p>启动数据库服务: <code>docker run --name mariadb -p 3298:3306 -e MYSQL_ROOT_PASSWORD={root用户密码} -v /Users/linjk/Documents/docker/mariadb/data:/var/lib/mysql -d mariadb:10.5.4</code>，参数说明</p><table><thead><tr><th>参数名</th><th>参数说明</th></tr></thead><tbody><tr><td>–name</td><td>运行的容器的名称</td></tr><tr><td>-p</td><td>主机端口：容器端口的映射关系</td></tr><tr><td>-e</td><td>设置数据库root用户的密码</td></tr><tr><td>-v</td><td>数据卷映射</td></tr><tr><td>-d</td><td>后台运行容器的模式</td></tr></tbody></table><p>查看容器是否运行<code>docker ps -a</code>:<br><img src="https://gitee.com/linjk/linjkImgs/raw/master/imgs/20200709003808.png" alt=""></p><blockquote><p>如果需要容器在运行docker服务后自启动，可以配置：<code>docker container update --restart=always {容器id}</code><br>如果需要进入容器查看数据库更多信息，可以配置：<code>docker exec -it {容器Id} bash</code>，然后执行命令<code>mysql -uroot -proot密码</code>即可在容器内登录数据库。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> DB </category>
          
          <category> MariaDB </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MariaDB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OpenResty(一)-入门</title>
      <link href="/2020/07/06/OpenResty(%E4%B8%80)-%E5%85%A5%E9%97%A8/"/>
      <url>/2020/07/06/OpenResty(%E4%B8%80)-%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<p><a href="https://github.com/openresty/openresty.org" target="_blank" rel="noopener">OpenResty</a>诞生于2007年，是一个兼具开发效率和性能的服务端开发平台，其核心是基于Nginx的一个C模块(lua-nginx-module)，该模块将LuaJIT嵌入到Nginx服务器中，并对外提供了一套完整的Lua API，透明地支持非阻塞I/O，提供了轻量级线程、定时器等高级抽象。主要用来实现微服务API网关。</p><pre class="mermaid">graph LR;    OpenResty三大特性-->详尽的文档和测试用例;    OpenResty三大特性-->同步非阻塞;    OpenResty三大特性-->动态;</pre><blockquote><p>对于 OpenResty 来说，绝大部分都是同步操作，只有 ngx.timer 这种后台定时器相关的 API，才是异步操作</p></blockquote><h3 id="安装OpenResty"><a href="#安装OpenResty" class="headerlink" title="安装OpenResty"></a>安装OpenResty</h3><p><code>brew tap openresty/brew &amp;&amp; brew install openresty</code></p><blockquote><p>小插曲：<br>brew命令卡在<strong>Updating Homebrew…</strong><br>可以<code>Ctrl+C</code>取消下就可以了<br><img src="https://gitee.com/linjk/linjkImgs/raw/master/imgs/20200707222135.png" alt="brew慢问题懒人解决方式"></p></blockquote><p>OK, 安装成功：<br><code>which resty &amp;&amp; resty -e &quot;ngx.say(&#39;【OpenResty】&#39;)&quot;</code></p><p><img src="https://gitee.com/linjk/linjkImgs/raw/master/imgs/20200707230630.png" alt="OpenResty安装成功"></p><p>安装信息：<br><img src="https://gitee.com/linjk/linjkImgs/raw/master/imgs/20200708002135.png" alt=""></p><blockquote><p>–prefix就是安装路径了</p></blockquote><h3 id="雏形"><a href="#雏形" class="headerlink" title="雏形"></a>雏形</h3><p>上面直接通过命令行的-e参数运行nginx服务的，现在，正式一点，在文件夹下通过配置文件配置方式，更接近实际：</p><p><a href="https://github.com/openresty/lua-nginx-module#content_by_lua_file" target="_blank" rel="noopener">更详细API参考</a></p><ul><li>准备目录结构</li></ul><p><img src="https://gitee.com/linjk/linjkImgs/raw/master/imgs/20200707231028.png" alt="目录"></p><ul><li>准备配置文件</li></ul><p><code>vim demo/conf/nginx.conf</code></p><p><img src="https://gitee.com/linjk/linjkImgs/raw/master/imgs/20200707231257.png" alt="nginx.conf"></p><ul><li>启动OpenResty服务</li></ul><p><img src="https://gitee.com/linjk/linjkImgs/raw/master/imgs/20200707231410.png" alt="OpenResty服务"><br><img src="https://gitee.com/linjk/linjkImgs/raw/master/imgs/20200707231446.png" alt="访问测试"></p><ul><li>退出服务</li></ul><p><code>openresty -p</code>pwd<code>-c demo/conf/nginx.conf -s quit</code></p><p>上面直接把代码放在配置文件，不合适，现在把它抽出来：</p><p><code>mkdir demo/lua &amp;&amp; echo &quot;ngx.say(&#39;openresty&#39;)&quot; &gt; demo/lua/openresty.lua &amp;&amp; cat demo/lua/openresty.lua</code></p><p><img src="https://gitee.com/linjk/linjkImgs/raw/master/imgs/20200708001505.png" alt=""></p><p>然后修改配置文件nginx.conf:<br><img src="https://gitee.com/linjk/linjkImgs/raw/master/imgs/20200708001638.png" alt=""></p><p>重启OpenResty服务，可以正常访问。</p><h3 id="寻求帮助"><a href="#寻求帮助" class="headerlink" title="寻求帮助"></a>寻求帮助</h3><p>可以借助OpenResty提供的命令<code>restydoc</code>，如：</p><blockquote><p>restydoc -s ngx.say<br><img src="https://gitee.com/linjk/linjkImgs/raw/master/imgs/20200708002431.png" alt=""><br>这些文档的路径就是–prefix参数下的pod子文件夹</p></blockquote><h3 id="包管理工具"><a href="#包管理工具" class="headerlink" title="包管理工具"></a>包管理工具</h3><p><a href="http://opm.openresty.org" target="_blank" rel="noopener">OPM</a>是OpenResty自带的包管理器(<em>不支持私有包</em>)，类似docker search，opm也支持搜索:<br><img src="https://gitee.com/linjk/linjkImgs/raw/master/imgs/20200708003326.png" alt=""></p><p><a href="https://github.com/bungle/awesome-resty" target="_blank" rel="noopener">这里</a>维护了几乎所有OpenResty可用的包。</p><p><a href="https://luarocks.org" target="_blank" rel="noopener">luarockers</a>是推荐使用的包管理工具，安装步骤：</p><ul><li><p>wget <a href="https://luarocks.org/releases/luarocks-3.3.1.tar.gz" target="_blank" rel="noopener">https://luarocks.org/releases/luarocks-3.3.1.tar.gz</a></p></li><li><p>tar zxf luarocks-3.3.1.tar.gz</p></li><li><p>【需事先安装lua】cd luarocks-3.3.1 &amp;&amp; ./configure &amp;&amp; make &amp;&amp; sudo make install</p></li></ul><p><img src="https://gitee.com/linjk/linjkImgs/raw/master/imgs/20200708004213.png" alt=""></p><h3 id="OPM项目初探"><a href="#OPM项目初探" class="headerlink" title="OPM项目初探"></a>OPM项目初探</h3><p>通过官方的<a href="https://github.com/openresty/opm" target="_blank" rel="noopener">OPM项目</a>，了解OpenResty的基本开发的目录结构，有助于入门。透过这个项目，可以学习一个OpenResty项目是如何分层组织起来的。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> OpenResty </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OpenResty </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AboutMe</title>
      <link href="/2020/07/05/AboutMe/"/>
      <url>/2020/07/05/AboutMe/</url>
      
        <content type="html"><![CDATA[<p><img src="https://gitee.com/linjk/linjkImgs/raw/master/imgs/wechat.jpg" alt="微信公众号【时光记旅】"></p>]]></content>
      
      
      <categories>
          
          <category> Misc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Misc </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
